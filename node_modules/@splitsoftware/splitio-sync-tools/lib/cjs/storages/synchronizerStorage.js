"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.synchronizerStorageFactory = void 0;
const pluggable_1 = require("@splitsoftware/splitio-commons/cjs/storages/pluggable");
// @TODO refactor into an storageValidator like in Browser and RN SDKs
/**
 * Function to create an InMemory Storage instance.
 *
 * @param {ISettings} settings   The Synchronizer's settings.
 * @param {() => void}        onReadyCb  The callback to execute when instantiating the pluggable storage.
 * @returns {IStorageAsync}
 */
function synchronizerStorageFactory(settings, onReadyCb) {
    const { storage } = settings;
    // @TODO support both storage param types?: config object (JS SDK) and storage function (Browser and RN SDK)
    const storageFactory = typeof storage === 'function' ? storage : (0, pluggable_1.PluggableStorage)(storage);
    // Ignoring metadata parameter since it's use by the Consumer API (like Events.track)
    // and the Synchronizer doesn't need to perform such actions.
    return storageFactory({ settings, onReadyCb });
}
exports.synchronizerStorageFactory = synchronizerStorageFactory;
